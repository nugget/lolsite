#!/usr/bin/perl -w

use strict;

require DBI::DBD;
require DBD::mysql;

my $dbdir = "./db";

my $FAIL = 0;
my $SUCCESS = -1;

print "Installing LoL!\n\n";
my %config = load_config("install.conf");
print "1.  Loading configuration\n";

print "2.  Verifying settings: ";
if(!sanity()) {
    print "FAILED\n\n";
    exit();
} else {
    print "OK.\n";
}

print "3.  Creating database: ";
if(!$config{ins_createdb} =~ /y/i) {
    print "Skipping.\n";
} else {
    create_db() or exit();
}

print "4.  Preparing Apache Conf: \n";
apache_conf();

print "5.  Generating config.inc: ";
if(!make_file("./htdocs/include/config.inc")) {
    print "FAILED\n\n";
    exit();
} else {
    print "OK.\n";
}

print "6.  Cleaning up file permissions:";
if(!clean_permissions()) {
    print "FAILED\n\n";
    exit();
} else {
    print "OK.\n";
}

sub create_db() {
    #
    # This procedure creates the database, adds a user to mysql, and tests the connection.
    # Then it runs the schema file to create and prepopulate all the tables.
    #
    print "\n";
    print "    o Creating database [$config{database}]\n";
    my $dbh = DBI->connect("DBI:mysql:database=mysql;host=$config{sqlhost};port=$config{sqlport}",$config{sqluser},$config{sqlpasswd});
    $dbh->do("DROP DATABASE IF EXISTS $config{database}");
    $dbh->do("DELETE FROM user WHERE user = '$config{loluser}'");
    $dbh->do("CREATE DATABASE $config{database}");
    $dbh->do("GRANT ALL ON $config{database}.* TO $config{loluser} IDENTIFIED BY '$config{lolpasswd}'");
    $dbh->do("FLUSH PRIVILEGES");
    $dbh->disconnect();
    $dbh = DBI->connect("DBI:mysql:host=$config{sqlhost};port=$config{sqlport};database=$config{database}",$config{loluser},$config{lolpasswd})
        or return $FAIL;

    run_sql($dbh,"schema.mysql");
    $dbh->disconnect();
    return $SUCCESS;
}

sub apache_conf() {
    my $pwd = `pwd`;
    chomp $pwd;

    print "    o Place the following fragment into your httpd.conf and restart apache:

      Alias /lol/ \"$pwd/htdocs/\"
      <Directory \"$pwd/htdocs/\">
          Options None
          AllowOverride All
          Order allow,deny
          Allow from all
      </Directory>

";
}

sub run_sql() {
    my ($dbh,$filename) = @_;

    my $sql;

    print "    o Running " .$filename;
    open SQL, "$dbdir/$filename";
    while(<SQL>) {
        next if($_ =~ /^#/);
        $sql .= $_;
        if($sql =~ s/;//) {
            $sql =~ s/\n//g;
            if($dbh->do($sql)) {
                print ".";
            } else {
                print "\n[$sql]\n";
                print $FAIL;
            }
            $sql = '';
        }
    }
    close SQL;
    print "\n";

    return $SUCCESS;
}

sub sanity() {
    my $r = $SUCCESS;

    if( $config{do_install} =~ /no/ ) {
      print " x install.conf not customized.\n";  $r=$FAIL;
    }

    return $r;
}

sub clean_permissions() {
    system "/bin/sh ./tools/fixperms.sh";
    return $SUCCESS;
}

sub load_config() {
    my ($filename) = @_;
    my %tmpconfig;

    open CF, $filename or die "Cannot load confg file: $filename";
    while(<CF>) {
        my $buf = $_;
        chomp $buf;

        if($buf =~ /^\s*([^#][^\s]+)\s+"?([^"]+)"?(\s+)?$/) {
            my ($key, $value) = ($1,$2);
            debug("Loading key [$key] with value [$value]");
            $tmpconfig{$key} = $value;
        }
    }
    close CF;
    return %tmpconfig;
}

sub make_file() {
    my ($target) = @_;
    my $source = $target . ".default";

    open SOURCE, $source or return $FAIL;
    open TARGET, ">$target";
    while(<SOURCE>) {
        my $buf = $_;
        foreach my $term (%config) {
            $buf =~ s/%$term%/$config{$term}/gi;
        }
        print TARGET $buf;
    }
    close TARGET;
    close SOURCE;

    system "chmod 0644 $target";

    return $SUCCESS;
}

sub debug() {
    my ($buf) = @_;
    chomp($buf);

    # print "$buf\n";
}
